// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package smart.proxies;

public class FeatureToggle implements com.mendix.systemwideinterfaces.core.IEntityProxy
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject featureToggleMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Smart.FeatureToggle";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FeatureName("FeatureName"),
		IsEnabled("IsEnabled"),
		ConfigurationValue("ConfigurationValue");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public FeatureToggle(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected FeatureToggle(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject featureToggleMendixObject)
	{
		if (featureToggleMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, featureToggleMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.featureToggleMendixObject = featureToggleMendixObject;
		this.context = context;
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static smart.proxies.FeatureToggle initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new smart.proxies.FeatureToggle(context, mendixObject);
	}

	public static smart.proxies.FeatureToggle load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return smart.proxies.FeatureToggle.initialize(context, mendixObject);
	}

	public static java.util.List<smart.proxies.FeatureToggle> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> smart.proxies.FeatureToggle.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Get value of FeatureName
	 * @param featurename
	 */
	public final smart.proxies.Features getFeatureName()
	{
		return getFeatureName(getContext());
	}

	/**
	 * @param context
	 * @return value of FeatureName
	 */
	public final smart.proxies.Features getFeatureName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.FeatureName.toString());
		if (obj == null) {
			return null;
		}
		return smart.proxies.Features.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of FeatureName
	 * @param featurename
	 */
	public final void setFeatureName(smart.proxies.Features featurename)
	{
		setFeatureName(getContext(), featurename);
	}

	/**
	 * Set value of FeatureName
	 * @param context
	 * @param featurename
	 */
	public final void setFeatureName(com.mendix.systemwideinterfaces.core.IContext context, smart.proxies.Features featurename)
	{
		if (featurename != null) {
			getMendixObject().setValue(context, MemberNames.FeatureName.toString(), featurename.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.FeatureName.toString(), null);
		}
	}

	/**
	 * @return value of IsEnabled
	 */
	public final java.lang.Boolean getIsEnabled()
	{
		return getIsEnabled(getContext());
	}

	/**
	 * @param context
	 * @return value of IsEnabled
	 */
	public final java.lang.Boolean getIsEnabled(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsEnabled.toString());
	}

	/**
	 * Set value of IsEnabled
	 * @param isenabled
	 */
	public final void setIsEnabled(java.lang.Boolean isenabled)
	{
		setIsEnabled(getContext(), isenabled);
	}

	/**
	 * Set value of IsEnabled
	 * @param context
	 * @param isenabled
	 */
	public final void setIsEnabled(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isenabled)
	{
		getMendixObject().setValue(context, MemberNames.IsEnabled.toString(), isenabled);
	}

	/**
	 * @return value of ConfigurationValue
	 */
	public final java.lang.String getConfigurationValue()
	{
		return getConfigurationValue(getContext());
	}

	/**
	 * @param context
	 * @return value of ConfigurationValue
	 */
	public final java.lang.String getConfigurationValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ConfigurationValue.toString());
	}

	/**
	 * Set value of ConfigurationValue
	 * @param configurationvalue
	 */
	public final void setConfigurationValue(java.lang.String configurationvalue)
	{
		setConfigurationValue(getContext(), configurationvalue);
	}

	/**
	 * Set value of ConfigurationValue
	 * @param context
	 * @param configurationvalue
	 */
	public final void setConfigurationValue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String configurationvalue)
	{
		getMendixObject().setValue(context, MemberNames.ConfigurationValue.toString(), configurationvalue);
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return featureToggleMendixObject;
	}

	@java.lang.Override
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final smart.proxies.FeatureToggle that = (smart.proxies.FeatureToggle) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

  /**
   * Gives full name ("Module.Entity" name) of the type of the entity.
   *
   * @return the name
   */
	public static java.lang.String getType()
	{
		return entityName;
	}
}
